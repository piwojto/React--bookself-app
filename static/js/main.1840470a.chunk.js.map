{"version":3,"sources":["components/SearchBook.js","components/Modal.js","components/BookList.js","App.js","index.js"],"names":["booksUrl","SearchBook","state","textInput","getBooks","trackPromise","axios","get","then","response","data","totalItems","props","onSearchResult","items","catch","err","console","error","handleEvent","event","setState","target","value","key","keyPressed","className","type","name","placeholder","autoComplete","onChange","onKeyPress","onClick","this","Component","Modal","log","onClose","show","selectedBook","checkClick","children","title","authors","publishedDate","undefined","imageLinks","src","thumbnail","alt","description","aria-label","aria-hidden","React","BookList","isOpen","toggleModal","bookList","map","book","id","volumeInfo","smallThumbnail","LoadingIndicator","usePromiseTracker","promiseInProgress","style","width","height","display","justifyContent","alignItems","color","App","handleBookList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1840470a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { trackPromise } from 'react-promise-tracker';\n\n// input tekstowy do wpisania nazwy filtra\n// Button do obsługi zapytania axiosa z wpisanym przez użytkownika query\n\nconst booksUrl=\"https://www.googleapis.com/books/v1/volumes?q=\"; \n\nclass SearchBook extends Component {\n  state = {textInput: ''}\n\n    getBooks = () => {\n        trackPromise(\n        axios.get(booksUrl + this.state.textInput + '&maxResults=40')\n        .then((response) => {\n          if((response.data.totalItems===0)) {\n            this.props.onSearchResult('error')}\n            else \n            this.props.onSearchResult(response.data.items)\n        }).catch((err => {\n          console.error(err)\n        })\n        ))\n      } \n\n  handleEvent = (event) => {\n    this.setState({ textInput: event.target.value });\n    event.key === 'Enter' && this.getBooks() \n  }\n\n  keyPressed =(event) => {\n    if (event.key === \"Enter\") {\n        event.key === 'Enter' && this.getBooks() \n    }\n  }\n\n  render() {\n    return (\n      <div>\n       <div className=\"container bcg p-2 rounded-lg\">\n          <h2>Google Books Search</h2> \n          <div className=\"container d-inline-flex\">  \n            <input\n              type=\"text\"\n              name=\"search\"\n              // value={this.state.query}\n              className=\"form-control mr-3 mb-5\"\n              placeholder=\"Search for Books ...\"\n              autoComplete=\"off\"\n              onChange={event => this.handleEvent(event)}\n              onKeyPress={event =>this.keyPressed(event)}\n            />\n            <button\n              type=\"submit\"\n              className=\"btn btn-secondary mb-5\"\n              onClick={this.getBooks}>\n              Search\n            </button>\n          </div> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBook","import React from 'react';\r\n// import BookList from './BookList';\r\n\r\n// tytuł pozycji\r\n// autorów\r\n// datę wydania\r\n// opis pozycji\r\n// kategorie \r\n// zdjęcie okładki\r\n\r\nclass Modal extends React.Component {\r\n\r\n  checkClick (event) {\r\n    console.log(event.target.className)\r\n    if(event.target.className==='shadowBcg')\r\n    this.props.onClose(console.log(event.target.className))\r\n  }\r\n\r\n  render() {\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n    const {selectedBook}=this.props\r\n    return (\r\n      \r\n      <div className=\"shadowBcg\" onClick={event => this.checkClick(event)}>\r\n        <div className=\"modal\">\r\n          <div className=\"m-2 w-100 border border-secondary rounded-lg p-3 overflow-hidden\">\r\n            <div className=\"font-weight-bold\">Title: {this.props.children.title}</div>\r\n            <div>Authors: {this.props.children.authors}</div>\r\n            <div>Published: {this.props.children.publishedDate}</div>\r\n            <div className=\"h-50 m-2\">\r\n                { this.props.children.imageLinks !== undefined &&\r\n                  <img src={this.props.children.imageLinks.thumbnail} alt=\"\"/>\r\n                  }\r\n            </div>\r\n            <span>Description: {this.props.children.description}</span>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <button \r\n              onClick={this.props.onClose}\r\n              type=\"button\" className=\"close\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react';\nimport Modal from './Modal';\n\n// lista kafelków z obrazkami i tytułami i autorem\n\nclass BookList extends Component {\n  state = {isOpen: false, selectedBook:''}\n\n  toggleModal = (props) => {\n    this.setState({ isOpen: !this.state.isOpen});\n    const selectedBook=props;\n    this.setState({selectedBook});\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        {(this.props.bookList==='error') \n        ? (<h4 className=\"text-center\">No Results to Display</h4>) \n        : (\n          this.props.bookList.map((book) => {\n            return (\n              <div \n                key={book.id}\n                className=\"col-md-3 border border-secondary rounded-lg\"\n              >\n                <div \n                  className=\"box m-2 overflow-hidden\"\n                  onClick={(event)=>this.toggleModal(book.volumeInfo)}\n                > \n                  <div>\n                    {book.volumeInfo.imageLinks !== undefined &&\n                      <img src={book.volumeInfo.imageLinks.smallThumbnail} alt=\"\"/>\n                    }\n                  <div>\n                    <div>Title: {book.volumeInfo.title}</div>\n                    <div>Authors: {book.volumeInfo.authors || 'N/A'}</div>\n                  </div>\n                  </div>\n                </div>\n              </div>\n            )\n          })\n          )\n        }   \n          <Modal show={this.state.isOpen}\n            onClose={this.toggleModal}>\n            {this.state.selectedBook}\n          </Modal>      \n      </div>\n    </div>\n    )\n  }   \n}\n \n\nexport default BookList;","import React, { Component } from 'react';\nimport SearchBook from './components/SearchBook';\nimport BookList from './components/BookList';\nimport { usePromiseTracker } from \"react-promise-tracker\";\nimport Loader from 'react-loader-spinner';\n\nconst LoadingIndicator = props => {\n  const { promiseInProgress } = usePromiseTracker();\n    return (\n    promiseInProgress && \n        \n    <div className=\"container\"\n        style={{\n        width: \"80%\",\n        height: \"80\",\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\"\n        }} >\n        <Loader type=\"ThreeDots\" color=\"gray\" height=\"80\" width=\"100\" />\n        <h6>Loading ...</h6> \n    </div>  );  \n}\nclass App extends Component {\n  state={bookList: []}\n\n  handleBookList = (bookList) => {\n    this.setState({ bookList });\n  }\n\n   render() {\n      return (\n        <div className=\"App\">\n          <SearchBook onSearchResult={this.handleBookList}\n          />\n          <LoadingIndicator/>\n          <BookList bookList={this.state.bookList} />\n        </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root'));"],"sourceRoot":""}